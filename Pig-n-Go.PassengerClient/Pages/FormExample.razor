@page "/form-example"
@using Pig_n_Go.Common.Passenger
@using Pig_n_Go.BLL.Passenger
@inject HttpClient _http

<h3>RegisterForm</h3>

<EditForm Model="@_passengerArguments" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <InputText id="name" placeholder="Name" @bind-Value="_passengerArguments.PassengerInfo.Name"/>
    <p/>
    <InputText id="surname" placeholder="Surname" @bind-Value="_passengerArguments.PassengerInfo.Surname"/>
    <p/>
    <button class="btn btn-primary" type="submit">Sumbit</button>
</EditForm>

@if (_passengerDto is not null)
{
    <div class="alert alert-secondary blockquote mt-4">
        <p>
            <b>Passenger created succefully</b>
        </p>
        <p>
            <b>@nameof(_passengerDto.Id): </b>@_passengerDto.Id
        </p>
        @if (_passengerDto.PassengerInfo is not null)
        {
            <p>
                <b>@nameof(_passengerDto.PassengerInfo.Name): </b>@_passengerDto.PassengerInfo.Name
            </p>
            <p>
                <b>@nameof(_passengerDto.PassengerInfo.Surname): </b>@_passengerDto.PassengerInfo.Surname
            </p>
        }
    </div>
}

@if (_registerPassengerError)
{
    <div class="alert alert-secondary blockquote mt-4">
        <b>Something went wrong</b>
    </div>
}

@code
{
    private readonly PassengerCreationArguments _passengerArguments = new PassengerCreationArguments { PassengerInfo = new PassengerInfo() };
    private PassengerDto _passengerDto;
    private bool _registerPassengerError;

    private async Task HandleValidSubmit()
    {
        try
        {
            HttpResponseMessage response = await _http.PostAsJsonAsync(
                "https://localhost:5001/passengers/add",
                _passengerArguments);

            if (response.IsSuccessStatusCode)
                _passengerDto = await response.Content.ReadFromJsonAsync<PassengerDto>();
        }
        catch (Exception)
        {
            _registerPassengerError = true;
        }
    }

}